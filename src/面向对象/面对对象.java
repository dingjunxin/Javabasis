package 面向对象;

//需求：描述汽车  描述事物其实就是在描述事物的属性和行为
/**
 * 属性对应是类中变量，行为对应的类中的函数（方法）
 * 其实定义类，就是在描述事物，就是在定义属性和行为。属性和行为共同成为类中的成员（成员变量和成员方法）。
 */
 class Car{
    /**
     * 成员变量和局部变量
     * 作用范围：
     * 成员变量：作用于该类中
     * 局部变量：作用于函数中或者语句中
     *
     * 在内存中的位置
     * 成员变量：堆内存中，因为对象的存在，才在内存中存在
     * 局部变量：存在于栈中
     */
    //成员变量
    //描述颜色
    String color="红色";
    //描述轮胎数
    int num=4;
    //运行行为
    void run(){
        System.out.println(color+"..."+num);
    }
}

public  class 面对对象 {
    /**
     * 面向对象：三大特征：封装，继承，多态
     *
     * 以后的开发，其实就是在找对象使用，没有对象，就创建一个对象
     *
     * 找对象，建立对象，使用对象，维护对象的关系
     */
    /**
     *类和对象的关系
     * 类：就是对现实生活中事物的描述。
     * 对象：这类事物，实实在在存在的个体。
     */
    /**
     * 映射到java中，描就是class定义的类
     * 具体对象就是对应java在堆内存中用到new建立实体
     */
    //需求：汽车修配厂，对汽车进行改装，将来到车改成黑车，三个轮胎。
    public static void show(Car car){
        car.num=3;
        car.color="black";
        car.run();
    }

    public static void main(String[] args) {
        //生产汽车（就是在堆内存中产生一个实体）
        Car car = new Car();//car就是一个类类型变量。记住：类类型变量指向对象
        car.run();
        //需求：将已有车的颜色改变，在java指挥方式是：对象.对象成员
        //对象的特点：封装数据
        car.color = "蓝色";
        car.run();
        /**
         * 匿名对象：
         *          调用方法匿名对象有意义
         *          调用属性匿名对象无意义
         * 使用方式1：当对对象的方法只调用一次时，可以用匿名对象来完成，这样写比较简洁
         * 如果对一个对象进行多个成员调用，必须给这个对象起个名字
         *使用方式2：可以将匿名对象作为实际参数进行传递
         */
        new Car().run();
        show(car);
    }
}